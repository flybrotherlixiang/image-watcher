{"version":3,"sources":["../../lib/imageWatcher.js"],"names":["folderPath","result","files","fs","readdirSync","i","newPath","path","join","checkIfIsDir","Object","assign","getAllFiles","jsPath","allFiles","finalScript","abJsPath","resolve","dirname","file","filePath","abFilePath","realFilePath","relative","fileName","basename","indexOf","console","log","open","e","fd","writeFileSync","writeFile","require","watch","Promise","reject","stat","err","stats","isDirectory","startWatch","imagePath","outputFile","watchTree","f","curr","prev"],"mappings":";+BAkBA,WAA2BA,UAA3B,EAAuC;AACrC,QAAIC,SAAS,EAAb;AACA,QAAIC,QAAQC,GAAGC,WAAH,CAAeJ,UAAf,CAAZ;AACA,SAAK,IAAIK,CAAT,IAAcH,KAAd,EAAqB;AACnB,UAAII,UAAUC,KAAKC,IAAL,CAAUR,UAAV,EAAsBE,MAAMG,CAAN,CAAtB,CAAd;AACA,UAAI,MAAMI,aAAaH,OAAb,CAAV,EAAiC;AAC/BI,eAAOC,MAAP,CAAcV,MAAd,GAAsB,MAAMW,YAAYN,OAAZ,CAA5B;AACD,OAFD,MAEO;AACLL,eAAOC,MAAMG,CAAN,CAAP,IAAmBC,OAAnB;AACD;AACF;AACD,WAAOL,MAAP;AACD,G;;kBAZcW,W;;;;;;gCAcf,WAAyBZ,UAAzB,EAAqCa,MAArC,EAA6C;AAC3C,QAAIC,WAAW,MAAMF,YAAYZ,UAAZ,CAArB;AACA,QAAIe,cAAc,oBAAlB;AACA;AACA,QAAIC,WAAWT,KAAKU,OAAL,CAAaJ,MAAb,CAAf;AACAG,eAAWT,KAAKW,OAAL,CAAaF,QAAb,CAAX;;AAEA,SAAK,IAAIG,IAAT,IAAiBL,QAAjB,EAA2B;AACzB,UAAIM,WAAWN,SAASK,IAAT,CAAf;AACA,UAAIE,aAAad,KAAKU,OAAL,CAAaG,QAAb,CAAjB;AACA,UAAIE,eAAef,KAAKgB,QAAL,CAAcP,QAAd,EAAwBK,UAAxB,CAAnB;AACA,UAAIG,WAAWjB,KAAKkB,QAAL,CAAcL,QAAd,EAAwB,MAAxB,CAAf;AACA,UAAII,SAASE,OAAT,CAAiB,GAAjB,KAAyB,CAAC,CAA9B,EAAiC;AAC/BC,gBAAQC,GAAR,CAAa,kBAAgBR,QAAS,KAAtC;AACA;AACD;AACDL,qBAAgB,MAAIS,QAAS,gBAAaF,YAAa,QAAvD;AACD;;AAEDnB,OAAG0B,IAAH,CAAQhB,MAAR,EAAgB,GAAhB,EAAqB,UAAUiB,CAAV,EAAaC,EAAb,EAAiB;AACpC,UAAID,CAAJ,EAAO,MAAMA,CAAN;;AAEPf,qBAAe,IAAf;AACAZ,SAAG6B,aAAH,CAAiBnB,MAAjB,EAAyBE,WAAzB;AACAY,cAAQC,GAAR,CAAY,0BAAZ;AACD,KAND;AAOD,G;;kBA1BcK,S;;;;;AA4Bf;;;;AA5DA;;;AAGA,MAAM9B,KAAK+B,QAAQ,IAAR,CAAX;AACA,MAAM3B,OAAO2B,QAAQ,MAAR,CAAb;AACA,MAAMC,QAAQD,QAAQ,OAAR,CAAd;;AAEA,SAASzB,YAAT,CAAsBF,IAAtB,EAA4B;AAC1B,SAAO,IAAI6B,OAAJ,CAAY,CAACnB,OAAD,EAAUoB,MAAV,KAAqB;AACpClC,OAAGmC,IAAH,CAAQ/B,IAAR,EAAc,CAACgC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,UAAID,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD;AACDtB,cAAQuB,MAAMC,WAAN,OAAwB,IAAhC;AACL,KALK;AAML,GAPQ,CAAP;AAQD;;AA8CD,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAChDT,QAAMU,SAAN,CAAgB,UAAhB,EAA4B,CAACC,CAAD,EAAIC,IAAJ,EAAUC,IAAV,KAAmB;AAC7Cf,cAAU,UAAV,EAAsB,4BAAtB;AACD,GAFD;AAGD","file":"imageWatcher.js","sourcesContent":["/**\n * Created by haha370104 on 2017/3/6.\n */\nconst fs = require('fs');\nconst path = require('path');\nconst watch = require('watch');\n\nfunction checkIfIsDir(path) {\n  return new Promise((resolve, reject) => {\n      fs.stat(path, (err, stats) => {\n      if (err) {\n        reject(err)\n      }\n      resolve(stats.isDirectory() === true)\n});\n})\n}\n\nasync function getAllFiles(folderPath) {\n  let result = {};\n  let files = fs.readdirSync(folderPath);\n  for (let i in files) {\n    let newPath = path.join(folderPath, files[i]);\n    if (await checkIfIsDir(newPath)) {\n      Object.assign(result, await getAllFiles(newPath));\n    } else {\n      result[files[i]] = newPath;\n    }\n  }\n  return result;\n}\n\nasync function writeFile(folderPath, jsPath) {\n  let allFiles = await getAllFiles(folderPath);\n  let finalScript = 'export default {\\n';\n  //这里会把xx.js当成一个文件夹 所以要先上一层一次\n  let abJsPath = path.resolve(jsPath);\n  abJsPath = path.dirname(abJsPath);\n\n  for (let file in allFiles) {\n    let filePath = allFiles[file];\n    let abFilePath = path.resolve(filePath);\n    let realFilePath = path.relative(abJsPath, abFilePath);\n    let fileName = path.basename(filePath, '.png');\n    if (fileName.indexOf('.') != -1) {\n      console.log(`Illegal file: ${filePath} !`);\n      continue;\n    }\n    finalScript += `  ${fileName}: require('${realFilePath}'),\\n`\n  }\n\n  fs.open(jsPath, 'w', function (e, fd) {\n    if (e) throw e;\n\n    finalScript += '};';\n    fs.writeFileSync(jsPath, finalScript);\n    console.log('image module has updated')\n  });\n}\n\n// 用法 node imageFolderWatcher.js\n\nexport function startWatch(imagePath, outputFile) {\n  watch.watchTree('./assets', (f, curr, prev) => {\n    writeFile('./assets', './src/utils/imageExport.ts')\n  });\n}\n"]}